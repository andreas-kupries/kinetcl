#!/usr/bin/env tclsh8.5
## -*- tcl -*-
# # ## ### ##### ######## ############# #####################
## Requirements

package require kinetcl
package require crimp::ppm
package require crimp::tk

# # ## ### ##### ######## ############# #####################

proc main {} {
    cmdline
    setup
    run
    return
}

# # ## ### ##### ######## ############# #####################

proc cmdline {} {
    global argv tracedir
    if {[llength $argv] != 1} usage
    lassign $argv tracedir
    return
}

proc usage {} {
    global argv0
    puts stderr "usage: $argv0 tracedir"
    exit 1
}

proc setup {} {
    global tracedir iphoto dphoto sat
    file mkdir $tracedir

    kinetcl image create I
    kinetcl depth create D

    set isize [dict get [I meta] map res]
    set dsize [dict get [D meta] map res]

    set iphoto [image create photo]
    set dphoto [image create photo]

    crimp write 2tk $iphoto [crimp blank rgb   {*}$isize 0 0 0]
    crimp write 2tk $dphoto [crimp blank grey8 {*}$dsize 0]

    set sat [crimp blank grey8 {*}$dsize 128]

    ttk::frame  .show
    ttk::label  .image -image $iphoto
    ttk::label  .depth -image $dphoto
    ttk::button .exit -text Exit -command ::exit

    # other buttons:
    # - change-viewpoint for depth (D set-view I, D unset-view I)
    # - stop/start recording.

    pack .show -side top
    pack .depth .image -side left -in .show
    pack .exit  -side left

    uevent bind ::I newdata newframe_image
    uevent bind ::D newdata newframe_depth

    bind all <q> ::exit

    update idletasks
    return
}

proc run {} {
    ping start...
    kinetcl start
    ping process...
    while {1} record
    return
}

proc ping {text} {
    puts -nonewline \r$text
    flush stdout
    return
}

# # ## ### ##### ######## ############# #####################

proc newframe_image {args} {
    global tracedir iphoto
    set s [clock milliseconds]

    set image [I map]
    set frame [I frame]

    crimp write 2file ppm-raw $tracedir/image-[format %04d $frame].ppm $image
    crimp write 2tk $iphoto $image
    .image configure -image $iphoto

    set e [clock milliseconds]
    ping "I [expr {$e - $s}] $frame        "
    return
}

proc newframe_depth {args} {
    global tracedir dphoto sat
    set s [clock milliseconds]

    set image [D map]
    set frame [D frame]

    # New way of visualizing the grey16 depth image: Split its pixels
    # into msb and lsb.  Then make MSB the hue, and LSB the inverted
    # value of a HSV, use a fixed saturation. Convert this to RGB.
    #
    # Now large depth changes are color coded, with the details in the
    # luminance.

    lassign [crimp split $image] msb lsb
    set image [crimp convert 2rgb \
		   [crimp join 2hsv \
			$msb \
			$sat \
			[crimp invert $lsb]]]

    crimp write 2file ppm-raw $tracedir/depth-[format %04d $frame].ppm $image
    crimp write 2tk $dphoto $image
    .depth configure -image $dphoto

    set e [clock milliseconds]
    ping "D [expr {$e - $s}] $frame        "
    return
}

proc record {} {
    kinetcl waitUpdate
    kinetcl estop
    update
    kinetcl estart
    return
}

# # ## ### ##### ######## ############# #####################
main
exit
