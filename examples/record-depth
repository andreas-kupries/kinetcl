#!/usr/bin/env tclsh8.5
## -*- tcl -*-
# # ## ### ##### ######## ############# #####################
## Requirements

package require kinetcl
package require crimp::ppm

# # ## ### ##### ######## ############# #####################

proc main {} {
    cmdline
    setup
    run
    return
}

# # ## ### ##### ######## ############# #####################

proc cmdline {} {
    global argv tracedir
    if {[llength $argv] != 1} usage
    lassign $argv tracedir
    return
}

proc usage {} {
    global argv0
    puts stderr "usage: $argv0 tracedir"
    exit 1
}

proc setup {} {
    global tracedir sat
    kinetcl depth create K

    set size [dict get [K meta] map res]
    set sat  [crimp blank grey8 {*}$size 128]

    file mkdir $tracedir
    return
}

proc run {} {
    ping start...
    kinetcl start
    ping process...
    while {1} record
    return
}

proc ping {text} {
    puts -nonewline \r$text
    flush stdout
    return
}

# # ## ### ##### ######## ############# #####################

proc record {} {
    global tracedir sat
    set s [clock milliseconds]

    kinetcl waitUpdate
    set image [K map]
    set frame [K frame]

    # New way of visualizing the grey16 depth image: Split its pixels
    # into msb and lsb.  Then make MSB the hue, and LSB the inverted
    # value of a HSV, use a fixed saturation. Convert this to RGB.
    #
    # Now large depth changes are color coded, with the details in the
    # luminance.

    lassign [crimp split $image] msb lsb
    set image [crimp convert 2rgb \
		   [crimp join 2hsv \
			$msb \
			$sat \
			[crimp invert $lsb]]]

    crimp write 2file ppm-raw $tracedir/depth-[format %04d $frame].ppm $image

    set e [clock milliseconds]
    ping "[expr {$e - $s}] $frame        "
    return
}

# # ## ### ##### ######## ############# #####################
main
exit
